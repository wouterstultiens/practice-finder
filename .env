# Telegram bot token (format: 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11)
BOT_TOKEN=7926858862:AAFgiE_3iFpM-Vjr0qw0MOxafVXXw3s-G7A

# Comma-separated list of Telegram chat IDs (e.g., 12345678,87654321)
CHAT_IDS=7880458010

# Name of the GCS bucket where state.json is stored
STATE_BUCKET=practice-finder-nl-vacancy-state

# # From the project root:
# export $(grep -v '^#' .env | xargs)

# echo $BOT_TOKEN       # should print your-bot-token-here
# echo $CHAT_IDS        # should print chatid1,chatid2
# echo $STATE_BUCKET    # should print practice-finder-nl-vacancy-state
# If those three echo correctly, youâ€™re ready to deploy.

# gcloud functions deploy vacancy-monitor \
#   --gen2 \
#   --runtime python312 \
#   --region europe-west4 \
#   --entry-point main \
#   --source=. \
#   --trigger-http \
#   --set-env-vars \
# "BOT_TOKEN=${BOT_TOKEN},CHAT_IDS=${CHAT_IDS},STATE_BUCKET=${STATE_BUCKET}"

# FUNCTION_URL=$(gcloud functions describe vacancy-monitor \
#   --region=europe-west4 \
#   --format='value(serviceConfig.uri)')

# gcloud scheduler jobs update http vacancy-monitor-hourly \
#   --location=europe-west1 \
#   --schedule "0 * * * *" \
#   --uri "${FUNCTION_URL}" \
#   --http-method=GET \
#   --time-zone "Europe/Amsterdam"

# gcloud functions call vacancy-monitor --region=europe-west4

